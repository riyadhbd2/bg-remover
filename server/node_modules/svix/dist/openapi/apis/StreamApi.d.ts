import { BaseAPIRequestFactory } from './baseapi';
import { Configuration } from '../configuration';
import { RequestContext, ResponseContext, HttpInfo } from '../http/http';
import { CreateStreamIn } from '../models/CreateStreamIn';
import { EventStreamOut } from '../models/EventStreamOut';
import { ListResponseStreamOut } from '../models/ListResponseStreamOut';
import { Ordering } from '../models/Ordering';
import { StreamIn } from '../models/StreamIn';
import { StreamOut } from '../models/StreamOut';
import { StreamPatch } from '../models/StreamPatch';
export declare class StreamApiRequestFactory extends BaseAPIRequestFactory {
    v1StreamEventsCreate(streamId: string, createStreamIn: CreateStreamIn, idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
    v1StreamEventsGet(streamId: string, limit?: number, iterator?: string, after?: Date, _options?: Configuration): Promise<RequestContext>;
    v1StreamStreamCreate(streamIn: StreamIn, idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
    v1StreamStreamDelete(streamId: string, _options?: Configuration): Promise<RequestContext>;
    v1StreamStreamGet(streamId: string, _options?: Configuration): Promise<RequestContext>;
    v1StreamStreamList(limit?: number, iterator?: string, order?: Ordering, _options?: Configuration): Promise<RequestContext>;
    v1StreamStreamPatch(streamId: string, streamPatch: StreamPatch, _options?: Configuration): Promise<RequestContext>;
    v1StreamStreamUpdate(streamId: string, streamIn: StreamIn, _options?: Configuration): Promise<RequestContext>;
}
export declare class StreamApiResponseProcessor {
    v1StreamEventsCreateWithHttpInfo(response: ResponseContext): Promise<HttpInfo<any>>;
    v1StreamEventsGetWithHttpInfo(response: ResponseContext): Promise<HttpInfo<EventStreamOut>>;
    v1StreamStreamCreateWithHttpInfo(response: ResponseContext): Promise<HttpInfo<StreamOut>>;
    v1StreamStreamDeleteWithHttpInfo(response: ResponseContext): Promise<HttpInfo<void>>;
    v1StreamStreamGetWithHttpInfo(response: ResponseContext): Promise<HttpInfo<StreamOut>>;
    v1StreamStreamListWithHttpInfo(response: ResponseContext): Promise<HttpInfo<ListResponseStreamOut>>;
    v1StreamStreamPatchWithHttpInfo(response: ResponseContext): Promise<HttpInfo<StreamOut>>;
    v1StreamStreamUpdateWithHttpInfo(response: ResponseContext): Promise<HttpInfo<StreamOut>>;
}
